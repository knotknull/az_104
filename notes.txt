AZ-104 Microsoft Azure Administrator Certification Prep
https://learn.acloud.guru/course/160303d7-6947-4fbc-9d19-fa304849f92e/dashboard:


https://learn.microsoft.com/en-us/credentials/certifications/azure-administrator/?practice-assessment-type=certification

Test: 
- 40 to 60 questions in 120 minutes
- 700 passing score / 70%

# Additional Material: Azure Storage Deep Dive
https://learn.acloud.guru/course/17ee4dc4-6f8e-4411-b0e9-26bdd4b8936c/dashboard




##################################################################
## Azure Admin
##################################################################

# Resource manager 

Resources: entity managed by Azure 
    - VM, Storage Accoutns, Virtual Networks
    - grouped into Resource Groups

Resource Group:
    - logical container for grouping resoruces
    - group by lifecycle / security
    - Associated with Subscription

Azure Subscription:
    - logical construct that groups resource groups and associated resources
    - billing unit
    - interacts with Azure Resource Manager

Azure Resource Manager:
    - orchestration layer ofr managing Azure Cloud
    - uses REST API endpoints (Portal, CLI, PowerShell)
    NOTE: ARM interacts with Azure Resource Providers



    Portal          CLI        PowerShell
      +--------------+--------------+   
                     |
    Azure Resource Manager (ARM)
                     |
        Azure Resource Provider
                     |
    +---------------------------------------+
    | Subscription                          |
    |                                       |
    |     +-----------------------------+   |
    |     | Resource Group              |   |
    |     |                             |   |
    |     |  +----------+  +----------+ |   |
    |     |  | Resource |  | Resource | |   |
    |     |  |   VM     |  |  Disk    | |   |
    |     |  +----------+  +----------+ |   |
    |     |                             |   |
    |     +-----------------------------+   |
    |                                       |
    +---------------------------------------+

Tips: 
    - resources are Azure managed entities (VM, networks, storage, etc)
    - resources are contained in resource groups
    - resources groups contained within Subscription
    - REST API endpoints to manage resources thru Azure Resource Manager 
    - Azure Resource Manager  is a management service
    - each resource has a resource provider 

# Azure Portal and Cloud Shell
Azure Portal:
    - web based portal for Azure cloud
    - create / manage resoruces
    - uses cloud shell


# Azure CLI and PowerShell
- Command Line utility for managing Azure resources
  - create and maange


PS: Get-CloudDrive:

FileShareName      : mapaccfileshr
FileSharePath      : //mapaccstorage.file.core.windows.net/mapaccfileshr
MountPoint         : /home/marc/clouddrive
Name               : mapaccstorage
ResourceGroupName  : LabResources
StorageAccountName : mapaccstorage
SubscriptionId     : cd002162-3eff-42ee-9220-................


Bash:
az group list



# Using ARM Templates

ARM Template (see ./scripts/azuredeploy.json)

ARM Template: 
  - Azure Resoruce Manager Templates
  - Infrastructure as Code
  - repeatable / quick deployment


Components of an ARM Template: 
{
    "$schema": "https://schema.management.azure.com",
    "contentVersion": "1.0.0.0",
    "parameters": {},
    "variables": {},
    "resources": {},
    "outputs": {},
}

parameters / variables: used to pass info to template
resources:  defines resources to create via template
outputs  :  return output from execution of template ( i.e. IP Address)

located in Home > Template specs

NOTE: Templates will be retired on March 31, 2025. 
      To store and share ARM templates, use the new template specs. Learn more about ARM template specs 


##################################################################
## Governance and Compliance
##################################################################

# Managing Subscriptions
Subscription 
 - billing unit of resources 
 - contain resource grups and associated resource groups
 - scope level for governance and security
     i.e. deploy form templates
 - can be associated with azure AD tenent

Types of Subscriptions
 - Pay-as-you-go
 - Pay-As-You-Go
 - Azure for Students
 - Professional Direct Support
 - Standard Support
 - Developer Support
 - Vistual Studio Professional Subscription
 - Vistual Studio Enterprise Subscription
etc


Subscription Naming Conventions
 - Prod / Dev / Staging
 - Dept / Team  (i.e. marketing / engineering)
 - Region (US / LATAM / EMEA)


# Using Management Groups

- organize / manage subscriptions by logically grouping them into management groups 
- orginizational hierarchy
- scope for enforcing governance / compliance 
- RBAC

            [Management Group: Root]
                  |
     +------------+------------+
  [sub a]       [sub b]     [mgmt grp: X]


Parent - Child relationships:   **
 - Root management group is top-level
 - mgmt grp and subs have single parent
 - 6 levels of hierarchy    **

Compliance Suppport
 - Azure Policies
 - Azure role-based access control (RBAC)

NOTE: RBAC roles flow down hierarchy

Root Management group cannot be moved or deleted
RBAC supported for management groups

NOTE: Global admins must be elevated to User Access Admin of root group

# Azure Policy
Policy 
  - enforce compliance / enable auditing
  - prohibit resources 
     - restrict acciss
  - allowed locations
     - geo compliance

2 components of Azure Policy:
    - Policy Definition
        - defines evaluation criteria for compliance
        - defines actions that take place
            - audit / denay outside of compliance

    - Policy Assignment
        - scope at where policy will be assigned: management group, subscription, resource group, resource 


When resources are out of scope with policy: 
    - creation can be denied 
    - or audited


Initiative Definition:    **
  - collection of policies that are tailored to achieving a 
    singular high-level goal (i.e. VM standards: location, sizing, etc.) 

ex. policy definition: 
    - VM must be created with project tag, if missing creation fails
    - assign policy at the scope of resource i.e. resource group

# Tagging resources

tag: name / value pair
 i.e.   dept:Marketing
        env:Prod

name : 512 chars   **
value: 256 chars
storage accounts: 128 chars
50 tags to a resource ** 

 - Tags are NOT inherited


LAB: 
# list resource groups
az group list

# update resorce group tags
az group update --resource-group "<RESOURCE_GROUP_NAME>" --tags "Environment=Production" "Dept=IT" "CreatedBy=<YourName>"


# list VMs, remove and set tags
az vm list --query '[].{name:name, resourceGroup:resourceGroup, tags:tags}' -o json
az vm update -g "<RESOURCE_GROUP_NAME>" -n webvm1 --remove tags.defaultExperience
az vm update -g "<RESOURCE_GROUP_NAME>" -n webvm1 --set tags.MarkForDeletion=Yes

# list virtual networks, overwrite tags
az network vnet list --query '[].{name:name, resourceGroup:resourceGroup, tags:tags}' -o json
az resource tag --tags "Dept=IT" "Environment=Production" "CreatedBy=<YourName>" --resource-group "<RESOURCE_GROUP_NAME>" -n "vnet1" --resource-type "Microsoft.Network/virtualNetworks"


# Locking / Moving Resources

Locks
 - override permissions to resources 
    - subscriptions, resource groups, resources
 - apply to all users and roles

Types: 
  ReadOnly Lock 
    - no delete or update, can read if authorized
  CanNotDelete
    - no delete, can read or modify if authorized

NOTE: Locks interited from parent scope 
    i.e. from subscription down

Moving Resources:
  - from resource grp to resource grp
  - from subcription to subscription
  - in Resource Group Overview > Move
NOTE: Moving resources between resouce groups is an "update" operation


# Managing Azure Costs

 - Subscription Type: 
    - Enterprise Agreement
    - Cloud Solution Provider
    - Pay as you go

 - Resource Type:
    - storage account: Blob vs. Table
 
 - Usage Meters:
    - CPU, ingress/egress, disk size

 - Resource Usage:
    - Cost of using a resource

 - Location
    - services have varying costs across geographical regions 

Best Practice:
 - right size for the use case
 - deallocate when not needed
 - use cloud capabilities when possible:  scalability, elasticity
 - plan costs

Tools:
 - pricing calculator  "Azure Pricing Calculator"
 - TCO Calculator
 - Cost Management Calculator


# Building a Cloud Governance Strategy

Governance: 
    - Rules
    - Policies
    - Standards

Control:
    - enforce rules
    - enforce policies and standards
  
- Define:  governance of organization
- Plan:    which tools to implement governance 
- Ready:   understand how tools will be used to implement governance
- Adopt:   implement governance for organization using cloud strategy

Governance:
 - Management Groups 
 - Subscriptions 
 - Azure RBAC
 - Policies
 - Locks / Tagging


                Policy 
                   |
Management Groups -> Subscription -> Resource Groups
                                         |
                                       RBAC


Blueprints: Policies, Subscriptions, RBAC, Resouce Groups packaged together


##################################################################
## Identity
##################################################################

Identity and Access Management Basics 

Principal:  unauthenticated entity that will seek to authenticate as an Identity
Identity :  Identity profile that is authenticated using credentials
Authorizations :  actions that are premitted / prohibited for an identity to perform


# Azure Active Directory (Azure AD)
    - Identity and Access Management  (IAM)
        - global cloud-based identity service for Azure that provides an identity repo
        - users / groups
        - Manage Identity Security: MFA, resource access, policy-based controls


Azure AD is global 
    - Azure AD Tenant will be based in a region (i.e. US vs EU) 


Tenant: is an instance of Azure AD
    default domain name for tenant:  xyz.onmicrosoft.com
    can be associated with multiple subscriptions


Organization == Tenant == Directory

Collaboration:
    Azure AD B2B / B2C allows access across tenants

Monitoring:
    audit logs, security monitoirng, risk management

Identity Integration:
 - Hybrid / SSO using Azure AD Connect and Azure AD Domain Services

Enterprise Access:
 - Additiona security for apps and devices 
    - on prem and in cloud


Active  Dirctory                vs.             Azure AD
- Organizationa Units (OUs)             - Administrative units
- Group Policy Objects (GPOs)           - SAML, WS-Federation, OAuth
- Kerberos, LDAP, NTLM                  - Flat directory structure
- Hierarchical                          - cloud-based solution
- On-Premises                           - Global


AD Connect can interact between both

# Managing Tenants

Designing Tenants:

        [- Monitor/Automate -]          : Monitor admin, perform access reviews, automate user lifecycles
      [----- Manage Apps  -----]        : Identify apps to be used and register on-prem 
  [----- Populate ID Resources -----]   : Add users, create groups, add devices setup hybird identities
[-----  Build Secure Foundations -----] : MFA, Backup global admin, Self Service Password Reset, privileged users



Azure Active Directory: Global 
 - specific instance of Az AD is a tenant
    - in geographical region (US)
    - users, groups, devices, etc



# Creating / Managing Users


NOTE:  Microsoft Entra ID is new name for Azure AD,  AAD -->> ME-ID

 - Members have default perms
 - identities are JSON objects
 - each user can have role assignments
 - each user can have object ownership

Types of Users:
    - Admins: administrator role assigned
    - regular users: native to Azure AD (Entra Id)
    - guests: external uers invited to tenant

Methods to create users:
    Portal: Default Directory>  Users  > Create User
    AZ cli:  az ad user create
    PowerShell:  New-AzureADUser

    Portal: Default Directory>  Users  > Bulk Operations:
        - Bulk create
        - Bulk invite
        - Bulk delete


Entra ID (ME-ID) -> User -> Role Assignment
                     +----> Object Ownership


# Creating / Managing Groups

 - manager role assignments / subscriptions, etc for similar users i.e. HR
 - create a group and assign subscriptions / role assignments to the group 


Type of Group : 
  - security group
        - used to manage access to shared resources for a group of users

  - Microsoft 365 Group
        - used to give members access to shared mailbox, calendar, files, etc

Membership Type:
  - assigned  
  - dynamic users
    - assign by property of a user 
        if property changes they are no longer part of that group 
          i.e. if dept=HR becomes dept=Billing 
          or usertype = Guest
  - dynamic device


# Create Administrative Units

ME-ID resoruce that provides logical container for objects
  i.e. US vs Canada users in a global admin / corp

i.e. Help Desk-US can only help HR-US
    - creates a Hierarchical structure wihout Organizational Units in on prem Active Directory

Admin Unit: logically divide organization to allow for scoping
    for AD Roles in an AD tenant

NOTE: can't nest Admin Units

AD Tenants are a flat data structure 
  - Admin Units allow to control scope of admin users

  NOTE: Admin Roles scope at tenant level unless Admin Units
        used to scope the Admin Role
    i.e. depts, geo locations, parent orgs, etc.


# Configuring Self Service Password Reset (SSPR)
 - allows users to change / reset password

Process: 
  Localization >> Verification >> Authentication >> Password Reset >> Notification

Authentication Methods:
    - Mobile App     : MS Authenticator
    - Mobile App Code: Time based code
    - Email
    - Mobile Phone 
    - Office Phone
    - Security Questions

- Enable / manage SSPR via AD groups
- One or more auth methods required for SSPR
- Admins must register via MFA (no security questions)
- Licensing: P1, P2, 365, Apps for Business

# Device Management

Device Registration: 
  - Azure AD Registered 
    - Least restrictive
    - BYOD: Win 10, iOS, iPadOS, Android, macOS

  - Azure AD Joined 
    - Device owned by organization
    - accesses via work account
    - exist only in cloud
    - supports win 10 and Server 2019

  - Hybrid Azure AD Joined 
    - Similar to Azure AD joined
    - device identies exist bot on prem and in-cloud
    - supports: win 7, 8.1, 10 and >=Server 2008

Device (i.e. laptop, pc) can connect via Cloud AD or as a Work AD
 - SSO into portal.azure.com


Azure AD
 - Tenants are instance of Azure AD service
 - Difference between Active Directory and Azure AD (ME-ID)
 - Users: Admin, users, guests
 - Admin Units: MFA, SSPR 



##################################################################
## Role-Based Access Control
##################################################################

# Role Based Access Control (RBAC)

Who can do What Where


Who  :  Security Principals (Users / Group)

What :  Role Definition and Assignment  (what they can do and who it is assigned to)

Where:  Scope of actions (Effective Permissions @: Management Group, subscription )



Azure Roles: 
    Role Definition: 
      i.e. "Actions": [*],
           "NotActions": [
              "Auth/*/Delete",
           ]

    Assigned at subscription levl


Azure Roles:
  - for Azure Resources inside subscriptions

Owner : full access to resources and delegates access

Reader: Can only view resources

Contributor: Create and manage resources
              NOTE: Can't manage access for other users  

User Access Admin: delegate access to resoruces


Azure AD (ME-ID) Roles
  - provide access to manage identity objects in Azure AD tenants 
        - not subscriptions and resources
  - manage identity resources inside tenants: 
        - users / applications / devices 
Azure AD RoOles; 
  Global Admin  : manage Azure AD resources ENTIRELY (i.e. Root)
  Billing Admin : perform billing tasks
  User Admin    : can manage users and groups
  Helpdesk Admin: help desk functions: password resets

        Azure Roles                                     Azure AD Roles
     ---------------------                         -------------------------
 - Manage access to Azure resources                 - Manage access to Azure AD Resources
     - VMs, resource groups, etc                        - users, groups, apps, devices 
 - Scope: multiple levels                           - Scope at tenant level
     - mgmnt groups, subs, res grps, resources      - admin unit
 - Create Custom Roles                              - Support for custom roles
 - Main Roles:                                      - Mail Roles: 
    - Owner                                             - Global Admin
    - Contributor                                       - User Admin 
    - Reader                                            - Billing Admin 
    - User Access Admin                                 - Help Desk Admin

        Azure AD (ME-ID) Roles
   +-------------------------------+
   | Global Admin / Billing Admin  |
   | User Admin   / Hel Desk Admin |
   +-------------------------------+
                |
                |
                | ------------------------- Root Space (Global Admin / User Access Admin) DON'T LOCK YOURSELF OUT OF ACCOUNT
                |
                |
                |   Azure Roles == (RBAC)
   +----------------------------------------------------------------------+
   |                                                                      |
   |     [Management Group]                                               |
   |            |                                                         |
   |            +------- [Subscription]                                   |
   |                           |                                          |
   |                           +------- [Resource Group]                  |
   |                                            |                         |
   |                                            +----- [ VM ]             |
   |                                            +----- [ Virutal Net]     |
   |                                                                      |
   |                                                                      |
   +----------------------------------------------------------------------+


# Assigning Access to Resources

RBAC: Authorization System 
    Who  : Principal (User / Group)
    What : Role Definition
    Where: Scope (Subscription, resource grp)

NOTE: DEFAULT IS IMPLICIT DENY

Role Assignment is an EXPLICIT ALLOW
    EXPLICIT DENY overrides EXPLICIT ALLOW

Role Definition
 Contributor 
   "Actions": [                     <<---- What actions are allowed on management plane
        "*"
   ],
   "NotActions": [                  <<---- Actions we are going to Deny
    "Auth/*/Delete",
   ],
   "DataAction": [],                <<---- Data Actions i.e. Storage Accounts
   "NotDataAction": [],             <<---- Actions we are going to Deny
   "AssignableScopes": [            <<---- Define scope for this Role:  resource, resource grp, subscription, management group
     "/"
   ]


Collective Permissions = Actions - Not Actions

Roles have an "additive" affect: 
 i.e.  have Contributor role at a highre level (Management Group) and a Reader role at a lower level (Subscription) 
       the effective permissions would be at  Contributor + Reader == Contributor


LAB: 
az role definition list > roleinfo.json
az role assignment list --all >> roleinfo.json 


# Creating Custom Roles

- create custom role definition
- use built-in role plus additional functionality

NOTE: Must have User Access Admin or Owner role for the account

Built-in role
Virtual Machine Contributor:

   "Actions": [                     
        "Compute/virtualMachines/*"
   ],
   "NotActions": [],
   "DataAction": [],                
   "NotDataAction": [],             
   "AssignableScopes": [            
     "/"
   ]

Custom VM Role:

   "Actions": [                     
        "Compute/*/read",                           <<-- Only allowing read and restart on VMs
        "Compute/virtualMachines/restart/action"
   ],
   "NotActions": [],
   "DataAction": [],                
   "NotDataAction": [],             
   "AssignableScopes": [            
     "/"
   ]

Resource Group > Access Control / IAM > Roles    (see scripts HelpDeskAdminRole.json)
az role definition create --role-definition hdesk_admin.json 



##################################################################
## Azure Storage
##################################################################

# Storage Accounts
 - top level resources for storage services

                    [Storage Account]
                           |
        +------------+---------------+---------------+
        |            |               |               |
[Azure Queue]  [Azure Files]    [Azure Table]     [Azure Blob]


Azure Queue : message-based storaage for microservices
Azure Tables: non-relational, sem-structured data storage service
Azure File  : Cloud-based file-sharing service
Azure Blob  : Object-oriented storage solution

Components:
 - Account Type
 - Performance Tier
 - Replication (reduncancy)
 - Access Tier (cost to retrieve)



Storage Reduncancy

Regions: 2ms latency zone
    - Availability Zone within Regions (independent power cooling and network, 1 or more Data Centers)

  - Locally Redundant Storage (LRS):  3 copies of data in one AZ
  - Zone    Redundant Storage (LRS):  1 copy of data in each AZ of a region
  - Geo     Redundant Storage (GRS):  3 copies of data in a single AZ, in two different regions
  - GeoZonal Redundant Storage (GZRS):  1 copy of data in each AZ of home region, and 3 copies in an AZ of another region
  - Read Access GeoZonal Redundant (RA-GZRS):  Same as GZRS but second region is Read Access


Storage Account Name has to be unique globally (24 chars max)

Account Type: 
 - General Purpose v1:  Legacy for blobs, queues and tables
 - General Purpose v2:  Recommended for blobs, files, queues and tables


Performance Tier: 
 - Blob storage:  Legacy blob-specific accounts
 - Standard    :  default storage performance tier
 - Premium     :  high-performance storage tier  


Premium Account Types:
 - Block Blobs: high transaction rates / low storage latency
 - File Shares: Enterprise / high-performance apps that need to scale
 - Page Shares: Best for random read / write operations


Access Tier: 
 - Hot    : Frequently accessed data
 - Cold   : Infrequently accessed data
 - Archive: Backup data / rarely accessed


# Azure Blob Storage 

Blob Storage: Object based storage (sub-service of Azure Storage Acct)
- accessible by HTTP / Rest
    - images / video files
    - text files
    - log files
    - virutal hard disk (VHD) files

stored in "container == bucket"
  - appears as file system but is flat file structure
     i.e. file prefix instead of folder name:
        dogs/kopi.jpb
        notdogs/cat.jpg
        cat.jpg

Blob Container: 
  - logical container to store blobs
                        +----------------- Storage Account  -----------------+
                        |     +-------------+      +-------------+           |
                        |     | Container A |      | Container B |           |
                        |     |  - blob-a1  |      | - blob-b1   |           |
                        |     |  - blob-a2  |      | - blob-c2   |           |
                        |     +-------------+      +-------------+           |
                        +----------------------------------------------------+

Types of Blobs:
    - Block Blobs : images / videos.  Best for streaming
    - Append Blobs: log files
    - Page Blobs  : Virtual Machine Disks


Container Access Level:
    Default is at storage account level 
    - Private (no anonymous access) 
    - Blob (anonymous access to blob) 
    - Container (anonymous access to container and blobs) 


NOTE: Blob containers by default do not allow anaonymous access to content

# Blob Object Replication
  Object Replication  
    - asynchronously copies block blobs between storage accounts
    - requires source / destination accounts
    - requires versioning and change feed
    - Can copy between storage accouts in : 
        - same region 
        - across regions
        - across subscriptions
        - across Azure Tenants

Versioning and Blob Change Feed
  - replication policy allows to perform asynchronous copy operations
     from src storage account to destination account via $blobchangefeed

Benefits:
  - minimize latency
  - increase efficeincy
  - data distribution
  - cost optimization: repliate data to archive tier


1. Storage > create storage account > data protection:
  - Enable versioning for blobs
  - Enable blob change feed


NOTE: destination only needs blob versioning enabled, change feed is only for source account

2. Create container in each storage account 
    - sourcecontaier / destcontainer

3. Setup Object Replication (from source or dest storage account) 
Storage Account > source storage account > Object Replication > Create Replication Rule


NOTE:  $logs and $blobchangefeed are system containers needed for system functionality
       Storage account can be a source for up to two destination accounts.

# Blob Lifecycle Management

Lifecycle Management: 
 - move blobs thru storage tiers as they age
     hot -> cold -> archive -> delete

 - optimize storage costs


 storage accounts > specific storage account > Data Management > Lifecycle Management
 - Add a rule

Supported Storage Accounts: 
    - GPv2 storage accounts
    - Blob storage accounts

Types / Subtypes supported: 
    - block blob 
    - append blob 
    - subtypes:
        - base blobs
        - snapshots 
        - versions 

Scope with filters


# Configuring Azure Files

Azure Files
 - sub-service of Storage Account
 - managed file share service
 - SMB / NFS connectivity
     - windows, Linux, macOS
 - Extended (to on-prem with) Azure File Sync

Made up of two parts: 
    - File Service
    - File Share
        - file structure that is being connected to (directories, files, etc.)

Insecure Connectivity:
  - REST
  - SMB 2.1
  - SMB 3.0

Secure Connectivity:
  - REST
  - SMB 3.0
NOTE: NFS NOT supported externally, only supported internally to Azure

Security:
  - Data encrypted at rest by default
  - Data encrypted in transit over HTTPS or SMB

File Share Quota:  5TB  **


# Configuring Azure File Sync
Azure File Sync:
  - extension of Azure Files
  - extend capabilities of on-premises file servers

Feature: 
  - Locally cache frequently accessed files on prem
  - Infrequent files get file pointer back to Azure Files
  - Requires Winddows 2012 R2 or later
  - SMB, NFS, FTPS
REQUIRED: File Sync Agent on windows machine

Components of Azure File Sync:
  - Storage Sync Service 
    - high-level Azure resource 

  - Cloud Endpoint
    - Azure file share utilized in File SYnc

  - Registerd Server 
    - trusted on-prem file servers

File Sync Cloud Tiering:
 - On Prem caches frequently accessed files
 - other files have a pointer mapping back to Azure File Share


# Storage Network Access
Storate Access Options: 
 - public endpoint
   - All services are public by DEFAULT using the service's public endpoint URL

 - Restricted Access
   - Storage account access can be restricted to virtual networks, 
     IP address ranges via the storage account's firewall 
     and via specific resource instances

 - Private Endpoints
   - Allow private IP access for resources in an associated virtual network

Public Endpoints:
 https://<accountName>.<subService>.core.windows.net/<resourceName>

i.e.
https://knotknulltrainingstorage.blob.core.windows.net/blobaccesscontainer/this_is_a_blob_file.txt

Storage Account > Networking > [Firewalls and virtual networks]
  Enabled from selected virtual networks and IP addresses 
    - this enable you to configure firewall for storage account resources

can also access private endpint connections tab and Custom domain name (CNAME)


# Securing Storage Accounts

Secure Storage:
    - all data, by default, in any Azure Storage Service is 
      secured using Storage Service Encryption (SSE)

    - all datacan be secured using transport-level security (HTTPS)

Azure Storage Authentication:
    - Management Layer (management account)
    - Data Layer (accessing internally / externally)

    - Access Keys: 
        - Azure generated keys (2) provicde unlimited access to both management and data layer

    - Shared Access Signature (SAS) tokens: 
        - access signature, generated from access keys 
        - provides limited access at either the account or service level

    - Azure AD Authentication
        - Uses Azure RBAC and AZ Active Directory identities to 
          provide authentication (instead of access keys)

Storage Account > Settings > Configuration:
     Secure Transfer required

Storage Account > Security + Networking: 
  Access Keys:  full access resource and data
  Shared Access Signature:  fine-grained access to resource services and types


Can create shared access token against specific container or object in container: 
Storage Accounts > Storae Account > Container > specific Container > settnings > shared access token 


Storage Accounts > Storae Account > Container > Access Policy

Azure Defender for Storage: 
    - detects harmful attempts to access / expoit Blob contaners and File Shares


# Azure Jobs
Import / Export Jobs to move data to cloud

- Move large amount of data between on-prem and Azure Storage
    - to / from Blob Service
    - to File Service
    - transport self-supllied drive
- Supported Drive types:
    - SATA
    - HDD
    - SSD

Azure Import Job:
 1. Prepare disks (WAImportExport - windows only)
 2. Create job
 3. Ship drives
 4. Check job status
 5. Recieve disks
 6. check data in Azure Storage

Azure Export Job:
 1. Create job
 2. Ship drives
 3. Check job status
 4. Recieve and unlock disks

NOTE: Import / Export jobs are now Data Box

Data Box - Disk:  35 TB 
Data Box       :  80 TB 
Data Box Heavy : 800 TB 

# Storage Utilities
 - Storage Explorer
    - GUI for working with storage accounts (Windows, Linux, MacOS)
    - manage storage accounts
    - Azure Azure AD (ME-ID) or Shared Access Signature (SAS) 
    - Uses AzCopy under the hood

 - AzCopy
    - cli utility for working with storage accounts (Windows, Linux, MacOS)
    - Azure Azure AD (ME-ID) or Shared Access Signature (SAS) 
    - scripting capabilities 



Resources:

https://azure.microsoft.com/en-us/products/storage/storage-explorer/
https://learn.microsoft.com/en-us/azure/storage/common/storage-use-azcopy-v10?tabs=dnf
  
curl -sSL -O https://packages.microsoft.com/config/<distribution>/<version>/packages-microsoft-prod.deb
sudo dpkg -i packages-microsoft-prod.deb
rm packages-microsoft-prod.deb
sudo apt-get update
sudo apt-get install azcopy



##################################################################
## Virtual Netowrking
##################################################################


[ Virtual Network ]
  [ Subnet ]
     [ Security Group ]
        [ VM ]
        [ Public IP ]

  [ Subnet ]
     [ Security Group ]
        [ VM ]
        [ Public IP ]

Virtual Network (VNet)
    - isolated network on Azure cloud
    - private network access 
        - between resources: VMs, App Service
    - network Integration   
        - connectivity between VNets, on-prem and remote devices

Components of Virtual Networks
 - Address space
   - private address space i.e. 10.0.0.0  

 - VNet 
   - isolated network where resources are deployed

 - Subnets 
   - segmentation of VNet into smaller sub-networks


# Creating Virtual Networks

- Determine IP CIDR
    - 10.0.0.0 / 16

- Subnet Requirements
    - compute vs db

- Connectivity Needs
    - Internet
    - resource to resource
    - resource to service
Virtual Netowk Fatures: 

 - Azure Reserved IP Addresses for a subnet 
     x.x.x.0-3 and x.x.x.255   **

 - Private Networking
    - VNet supports DHCP for private IP addressing for resources

 - Public Networking
    - VNet supports public IP Addr (v4, v6)

 - Peering 
    - VNet supports peering between VNets 
        - same region, across regions

 - Network Gateway 
    - VNet uses gateway subnets to make VPN connections 
    - VPN Gateway

 - Monitoring 
    - view logs
    - monitor connectivity
    - view topology of VNet

Default Connectivity:
 - intra-network traffic and outbound internet traffic is allowed
 - DNS, DHCP are built in for VNets
 - Protocols: TCP, UDP, ICMP (ping)

Address Restrictions:
    - smallest VNet subnet size is /29
    - largest  VNet subnet size is /8
    - RESERVED:  first 4 and last :  x.x.x.0-3, x.x.x.255


# Deploying Network Resources
IP Addressing:
 - private
 - public
    - Basic SKU 
        - statically or dynamically assignable Public IP
        - accessible by default
        - requires Network Sec Grp to restrict traffic
        - does not support availability zone deployments

    - Standard SKU 
        - statically assignable Public IP
        - not accessible by default
        - requires Network Sec Grp to allow traffic
        - supports availability zone deployments

 - IP CIDR 

NIC IP Configurations:
    - Private IP Address
    - can also have Public IP Addr

NOTE: on 20250930, Azure Basic Public IP will be retired


# Routing Virtual Networks
  Routes: Paths for connectivity
        - vm to vm
        - vm to internet, etc.

System Routes
 - default routes built-in to VNets, CANNOT BE MODIFIED

Custom Routes
 - user-defined routes or border gateway protocol (BGP) routes 
   that override system routes

BGP Route:
 - routes that are exchanged between integrated networks


Can create a route table and associate it with a subnet, this shows up in the NIC Effective Routes
> Network Interface > Effective Routes

Route Precedence
  Custom  >  BGP >   System 


# Network Security Groups 
  - control flow of traffic inside of network
  - allow / deny rules
  - control security at subnet / NIC layer 
  - specify priority:  
        - lower number / higher priority   10 > 1000
  - default rules cannot be deleted but can be overridden by higher priority rules (lower number)

NSG is associated with Subnet or NIC

Rule Precedence: Once a matching rule is hit, no further evaluation done 

NOTE:  User defined rules use priority 100 - 4096


    +-VNet--------------------------------------+
    |                                           |
    |   +---Subnet [NSG-1]------------------+   |
    |   |                                   |   |
    |   |  [Web-VM]                         |   |
    |   |                                   |   |
    |   |              [DB-VM]-[NSG-2]      |   |
    |   |                                   |   |
    |   +-----------------------------------+   |
    |                                           |
    +-------------------------------------------+

NOTE: what could be allowed at NSG-2 could be blocked in NSG-1 and vice versa)

Standard SKU Public IP is not accessible by default (i.e. no SSH)

Network Security Groups are STATEFUL

# Using DNS

Domain Name System
 - supports:  A, AAAA, CNAME, TXT, MX, PRT, SRV, SOA
 - private / public zones 

record: 
name,    type,  value 
xyz.com, A,     111.222.33.45

record sets: 
name,    type,  value 
xyz.com, A,     111.222.33.45
xyz.com, A,     111.222.33.47


Alias record:  points to a resource name

Private DNS Zone:
 - similar to public DNS but resides only within Azure. 
 - can link Private DNS Zone to to virtual network:
    Private DNS zone > Virtual Network Links 

Features:
 - RBAC
 - Activity Logs
 - Resource Locking
 - Private DNS zone
 - Alias records


# Azure Firewall

 - Platform as a Service firewall
 - Fully qualified domain name (FQDN) support
 - Azure Firewall Subnet needs to be created for Firewall appliance to be deployed
     /26 CIDR (or lower)

 - Handles:
    - NAT Rules
    - Netowrk Rules
    - Application Rules

Features:
  - DNAT / SNAT 
    - configure outbound / inbound NAT Rules
  - Network Rules
    - Layer 4 traffic
  - App rules
    - filter websites
  - Threat Intel 
    - Identify malicious IPs / domains
  - Monitoring
    - Integrates with Azure Monitor to capture firewall traffic


Steps to Implement Azure Firewall:

1. Create VNet
2. Create Azure Firewall Subnet (/26 or lower)
3. Create Azure Firewall and deploy to Frewall Subnet
4. Create Route via Route table to route traffic flow from Default to Azure Firewall

# Using Service Endpoints


All Platforma as a Service connectivity (PaaS) for Microsoft services 
has a public endpoint by default (think AWS S3)

 - traffic goes to public internet to hit public endpoint 


Service Endpoint: 
 - can provide private connectivity to a service from inside pirvate virutal network 
    ex. VM can access Azure File Share from storage account using service endpoint
        NOTE:  Connection is over Microsoft backbone network

 - enabled per subnet 
 - NOT all services are supported
 - supported services differ per region
 - Does NOT GIVE services a private ip
 - Provides source IP as private IP
 - decrease attack surface
    
NOTE: gives mapping to Microsoft Storage and not a direct mapping to Azure Files or Blobs

Service Endpoint Policy:
 - can sepcify certain resources that can access the service endpoint 
    i.e. all storage accounts vs. a resource group vs. a specific storage account
 
 - Added security for service endpoints
  

# Using Private Endpoints
Private Link: 
  - connect your services as connected resources in your network with a private IP 
    known as a Private Endpoint    
  - connectivity to:
        -  Azure Services
        -  Customer / partner Services

Direct service (sub-resource) mapping
  i.e. direct connection to Azure Files or Blob and not just connectivity to Storage Account



##################################################################
## Intersite Connectivity
##################################################################

# Configuring Azure VNet Peering

Default Connectivity:  
 - intra-network traffice and outbound internet traffic is allowed 
   HOWEVER, Virtual Networks are isolated by default



VNet Peering
 - Non-Reciprocal: connection must be established in both directions
 - Global Connectivity: peerings can be same region or cross-region (global)
 - Non Transitive 

    [Node A] <---> [Node B] <---> [Node C]

NOTE: Node A cannot connect to Node C via Node B

VNet Peering Benefits:
 - low -latency, high-bandwidth connections
 - cross-network communications
 - Data transfer between / across
    - subscriptions
    - AAD tenants via Azure roles
    - Azure regions

console > virtual network > peerings

NOTE: can setup peering connections for both sides via the Peering form.


Types of Peerings:
 - virtual network peering
 - global virtual network peering

# Implementing VPNs

VPN Gateway
 - establishes connectivity between VNets, similar to VNet peering 

Components:
 - VNet gateway for VPN gateway
 - Gateway subnet
 - Public IP per VNet gateway
 - IPsec tunnel for encryption

Capabilities of Azure VPN Gateway:
 - point to site
 - site to site
 - allows transitive traffic


Routing Types:

Policy-based:
  - static routng via policy declarations
  - Legacy on-prem VPN devices
  - supports only IKEv1 encryption
  - only basic sku


Route-based:
  - static and dynamic routng 
  - resilient to topology changes
  - can coexist with ExpressRoute
  - supports IKEv2

    SKU         Site-to-Site Tunnels            Throughput          BGP Support
   Basic            Max:10                        100 Mbps            Not Supported    
   VpnGw1AZ         Max:30                        650 Mbps              Supported    
   VpnGw2AZ         Max:30                         1   Gbps             Supported    
   VpnGw3AZ         Max:30                        1.25 Gbps             Supported    

NOTE: basic should only be used for dev/test, doesn't support migrating between skus

Active / Active vs Active / Passive

Active/Passive: 
  1 VPN Gateway connects to on-prem site with a backup on-prem site configured
    includes a passive VPN Gateway connect with the same connections


Active/Active:
provides functionality to both VPN Gateways to be serveing traffic 



Gateway Subnet (called GatewaySubnet) needs to be created, CIDR is /27:
10.0.0.0/27


console > virtual network gateway
Virtual Network Gateways created in each Virtual Network

console > local network gateway
use IP Address of Virtual Network Gateway created for that Virtual network


then create connection between local network gateway and VNG
     - console > vitual network gateway > connections > add 
            connection type IPSec (simulate site to site (onrprem to azure))



[------------------------------- Azure -------------------------------] [ On Prem ] [--------- Azure --------- ]            
[ Create VNets]  [ Specify the ] [ Create ] [Create ] [ Create ]        [Configure]    [ Create VPN ]
[ and subnets ]  [ DNS Server  ] [ Gateway] [ VPN   ] [ Local  ]        [VPN Device]   [ Connection ]
                                 [ Subnet ] [Gateway] [ Gateway]        

- VNet to VNet
- Site  to Site
- Point to Site
- IPsec tunnel for encryption


# Configuring ExpressRoute

ExpressRoute:
 - Service to make direct connection to Azure and Microsoft Resources 
 - Physical dedicated connection
    - not encrypted by default
 - Connect Microsoft Edge to a Partner Edge
    - consists of primary and secondary circuit
    - 2 phsyical dedicated connections (redundancy)
        - no IPSec Tunnel
    - Dynamic routing via BGP
    - 50 Mbps - 10 Gbps


- Microsoft Peering 
    - allows connection to Microsfoft Resources:  Office365, etc

- Azure Private Peering 
    - allows connection to Azure resources: 

Requirements:
 - virtual network gateway for private peering connection
    - create connection on ExpressRoute to virtual network gateway
    - VNet Gway needs virtual subnet
 - On prem needs: 
    - ASN #: Autonomous System Number 
    - VLAN ID : VLAN using to peer network
    - 2 Subnets (/30 == 4 IP addr) 
        - 2 in use for connection
        - 1 for express route
        - 1 for BGP session to exchange routes
    - shared key
    - Public IP addr for Microsoft peering


Implementation steps:
1. Create ExpressRoute Circuit
2. Give Service Key to Provider
3. Create Peering Configuration
4. Create Virtual Network Gateway
    - gateway type must be ExpressRoute 
    - must be deployed into a gateway subnet


SKU:
- Local   : access to 1-2 Azure regions in same metro as your circuit
- Standard: access to all Azure regions in same geopolicial region as circuit
- Premium : access to worldwide services


# Implementing Virtual WAN
Virtual WAN: 
  - create virtual wan hubs for hub and spoke networks
    - point to site
    - site to site
    - ExpressRoute
    - VNets
  - Manage routes, firewalls, topology thru one interface
  - One Hub per Region, can connect each hub in WAN
  - Create Managed Virutal Hub in each region and can connect each regional hub
  - any-to-any connectivity
  - Managed Virtual Network

  
                                        [ExpressRoute]
                                             |
                         [Site2Site] -- [Virtual WAN] -- [Point2Site]
                                             |
                                          [VNets]

Virtual WAN SKUs:
Basic:
  - Transitive peering NOT SUPPORTED
  - S2S VPN connections only
  - Upgrade to Standard supported

Standard:
  - Transitive peering SUPPORTED
  - S2S VPN, P2S VPN, ExpressRoute, VNet-to-VNet 

NOTE: The virtual WAN resource represents a virtual overlay of your 
      Azure network and is a collection of multiple resources.

console > Virtual WAN 
> Connectivity 
 > Hubs 
 > VPN Sites
 > User VPN Configurations
 > ExpressRoute Circuits
 > Virtual Network Connections

- Can create ONE Hub per Region **
  - when creating hub can create the following
    - Site to site  
    - Point to site  
    - ExpressRoute


VWan Lab:

Hub VNet                                        Spoke VNet
+--------------------------------+     +--------------------------------+
| +------------+  +------------+ |     | +------------+  +------------+ |     
| | Management |  |   Gateway  | |     | |  Gateway   |  |            | |     
| |  Subnet    |  |    Subnet  | |     | |  Subnet    |  |    Subnet  | |     
| |            |  |            | |     | |            |  |            | |     
| |[Management]|  | [  VNet  ] | |<--->| |[   VNet   ]|  |  [  VM  ]  | |     
| |[    VM    ]|  | [ Gateway] | |     | |[  Gateway ]|  |  [  VM  ]  | |     
| |            |  |            | |     | |            |  |            | |     
| +------------+  +------------+ |     | +------------+  +------------+ |     
+--------------------------------+     +--------------------------------+     



##################################################################
## Azure Virtual Machines
##################################################################

Azure Virutal Machine
  - IaaS, scalable computing resource
  - CPU, Memory, storge, networking
  - can be created from: CLI, Portal, PowerShell, SDK, API

Core Parts:
 - VM Sizing: 
    - CPU / Memory
 - Networking: 
    - VNet, Subnet 
    - NIC, Public IP 
    - Network Security Group
 - Storage
    - Azure Disks   
        - OS Disk and temp 
        - Data disk for persistance

        VM Family Types                Description
     ------------------------      ---------------------------------------------------
        General Purpose              Balanced CPU to memory. test / dev / small - medium workloads 
        Compute Optimized            High CPU to memory.  Medium traffic web servers, network appliance, batch, app servers
        Memory  Optimized            High memory to CPU.  Relational db, caching, in-memory analytics            
        Storage Optimized            High disk throput and I/O.  Big Data, SQL, NoSQL, data warehouse, OLTP
        GPU                          Heavy graphic rendering, video editing, AI training and deep learning
        HPC                          Fastest / most powerful. Large scale compute mathematics, science


VM Properties:
 - Name
 - Region 
 - Size 
 - Image (Windows / Linux) 

        +--resource group --------------+
        |                               |
        |     +------- VM --------+     |
        |     |                   |     |
        |     | [Disk]  [  NIC  ] |     |
        |     | [ OS ]  [Private] |     |
        |     | [Data]  [   IP  ] |------------[Public IP] 
        |     +-------------------+     |
        |                               |
        +-------------------------------+


VM Architecture

        +--resource group -----------------------------------+
        |                                                    |
        |      +--VNet---------------------------+           |
        |      |                                 |           |
        |      |  +--Subnet------------------+   |           |
        |      |  |                          |   |           |
        |      |  |  +------- VM ---------+  |   |           |
        |      |  |  |                    |  |   |           |
        |      |  |  |             [Net]  |  |   |           |
        |      |  |  |  [  NIC  ]--[Sec]  |  |   |           |
        |      |  |  |  [Priv IP]  [Grp]  |  |   |           |
        |      |  |  |     |              |  |   |           |
        |      |  |  |     +------------------------[Public] |
        |      |  |  |                    |  |   |  [  IP  ] |
        |      |  |  +--------------------+  |   |           |
        |      |  |                          |   |           |
        |      |  +--------------------------+   |           |
        |      |                                 |           |
        |      +---------------------------------+           |
        |                                                    |
        +----------------------------------------------------+

NOTE:  
Custom Data allows to pass a cloud-init script (or other data) while VM is being provisioned. 
(see cloud-init.txt)


Windows:
Custom data is placed in %SYSTEMDRIVE%\AzureData\CustomData.bin as a binary file, but it isn't processed. 
If you want to process this file, you need to build a custom image and write code to process CustomData.bin.

Linux:
On Linux operating systems, custom data is passed to the VM via the ovf-env.xml file. 
That file is copied to the /var/lib/waagent directory during provisioning. 
Newer versions of the Linux Agent copy the Base64-encoded data to /var/lib/waagent/CustomData for convenience.


# Managing VM Disks


Virtual Hard Disk (VHD)
  - file representation of what is found on a hard disk
  - VMs use VHDs to store OS, apps, data.
  - VHD stored as page blobs in blob service 


VHD purposes:
  - OS Disk
    - default with VM
    - stores OS
    - registered as SATA drive
    - either C: on Windows or "/" on linux
    - max capacity 4095 GB (4TB)

  - Temp Disk
    - default with VM
    - stores non-persistent data like page / swap files
    - localized to underlying Microsoft infrastructure

  - Data Disk
    - additional disks attached to a VM
    - used for storing persistend data liek files or databases
    - registered as a SCSI drive
    - max cap 32,767 GB  (32TB)

Managed vs. Unmanaged Disks

Managed: 
  - Azure Resource Manager (ARM) managed resource
  - Azure-Managed storage accounts
  - Availability supported
  - Role-Based Access Countrol (RBAC)
  - Snashot support
  - Backup support

Unmanaged: 
  - Not an Azure Resource Manager managed resource 
  - Manually maanged storage accounts
  - Availability NOT guaranteed

Disk Types: 
  - UltraDisk (SSD)     I/O intensive workloads, i.e. top-tier OLTP, transaction heavy workloads (only as data disk)
  - Premium   (SSD)     Production / performance workloads
  - Standard  (SSD)     web servers, light enterprise apps, and dev/test workloads
  - Standard  (HDD)     Backup, non-critical workloads

NOTE: performance limited to specific VM sizes

Disk Encryption at Rest 
 - Storage Service Encryption (SSE)
    - encryption of physical disks in the data center
    - built into azure platform

 - Azure Disk Encryption (ADE)
    - optional encryption of VHD
    - ensures a disk is only accessible by the VM that owns the disk
    - OS tools like BitLocker and DM-Crypt

console > Virutal Machine > VM Instance > Disk > Additional Settings

Disks to encrypt: 
[ Data Disk ]

[click to select key]
 >> create new key vault
    - Access Policy:  (x) Azure Disk Encryption for volume encryption

 >> create new key 


at PowerSehll: 
Get-AzVMDiskEncryptionStatus -ResourceGroupName {resource_grp_name} -VMName {virt_machine_name}

OsVolumeEncrypted          : NotEncrypted      
DataVolumesEncrypted       : NotMounted 
OsVolumeEncryptionSettings :       
ProgressMessage            : Encryption succeeded for data volumes       

# Config VM Availability / Scale sets

Availability Sets:
 - protect redundant VMs
 - protect against underlying host failures 
 - prevent outages due to maintenance

Fault Domain:
 - underlying failure: power and network outages
 - availability set handles spreading VMs across fault domains
   - Max of 3 Fault Domains

Update Domain:
 - logical grouping of infra for maintenance / updates 
   - Max of 20 Update Domains

Availability Sets allow and Availabilty Zone to be HA if a rack goes down

NOTE: Can only place a VM in an Availablity Set upon creation of the VM


Scale Sets:

As traffic increase or decreases, VMs will be spun up or down.
 - simplifiy scaling configs
 - save costs by aligning usage w/ demand
 - scale to meet demand to traffic

Scale Set Components:   VM Defintion + Scaling Definition + Scale-In Policy

  VM Definition: 
   - Region / Size / Image / Name / Storage / Net

  Scaling Definition: 
   - Default 
   - Condition, i.e. CPU > 80% 
   - Actiopn: +1 VM 

  Scale-In Policy: 
   - Delete VMs by priority as scaling-in operations occur 

ex. 
Scale Out: 
CPU threshold (%)  :  75
Duration in minutes:  10
Number of instance to increase by: 1 

Scale In: 
CPU threshold (%)  :  25
Duration in minutes:  1

Scale In Policy:  newest VM / oldest VM / balance between AZ and fault domain and then hightest instance identies

Lab: resize Azure VM in an Availability Set: 
# get current size of VMs
Get-AzVM

# get VM sub name
Get-AzSubscription

# check VM CPU metrics
az monitor metrics list --resource /subscriptions/<ID>/resourceGroups/<RESOURCE_GROUP_NAME>/providers/Microsoft.Compute/virtualMachines/labVM0

# Assign the value to the $vm variable:
$vm = Get-AzVM -ResourceGroupName <RESOURCE_GROUP_NAME> -VMName labVM0

# Assign variable the new VM size
$vm.HardwareProfile.VmSize = "Standard_B1s"

# Perform the PowerShell commands to resize the VM:
Update-AzVM -VM $vm -ResourceGroupName <RESOURCE_GROUP_NAME>

# Check that labVM0 was resized:
Get-AzVM 

# Check VM CPU metrics for labVM1:
az monitor metrics list --resource /subscriptions/<ID>/resourceGroups/<RESOURCE_GROUP_NAME>/providers/Microsoft.Compute/virtualMachines/labVM1

# Check the VM sizes available:
$vm = Get-AzVMSize -ResourceGroupName <RESOURCE_GROUP_NAME> -VMName labVM1

# Assign our variable:
$vm.HardwareProfile.VmSize = "Standard_B1s"

# Perform the PowerShell commands to resize the VM:
Update-AzVM -VM $vm -ResourceGroupName <RESOURCE_GROUP_NAME>

# To view results of the change, enter:
Get-AzVM 



## Network Traffic Management
## Web Apps and Containers
## Monitoring
## Backup and recovery


.